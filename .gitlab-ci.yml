stages:
  - buildenv
  - build
  - unit_tests
  - integration_tests
  - package

stockmono_buildenv:
  image: docker:19.03.12
  stage: buildenv
  services:
    - docker:19.03.12-dind
  script:
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
    - docker build -t $CI_REGISTRY_IMAGE/stock_env:$CI_COMMIT_SHA -f stockmono.docker .
    - docker push $CI_REGISTRY_IMAGE/stock_env:$CI_COMMIT_SHA

stockmono_build:
  image: $CI_REGISTRY_IMAGE/stock_env:$CI_COMMIT_SHA
  stage: build
  script:
    - mono --version

    - ./configure.sh
    - make strict
    - make
    - make sanitycheck
    - make install

stockmono_test_unit:
  image: $CI_REGISTRY_IMAGE/stock_env:$CI_COMMIT_SHA
  stage: unit_tests
  script:
    - mono --version

    - ./configure.sh
    - make
    - make check

stockmono_test_integration:
  image: $CI_REGISTRY_IMAGE/stock_env:$CI_COMMIT_SHA
  stage: integration_tests
  script:
    - mono --version

    - ./configure.sh
    - make
    - make update-servers

newmono_buildenv:
  image: docker:19.03.12
  stage: buildenv
  services:
    - docker:19.03.12-dind
  script:
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
    - docker build -t $CI_REGISTRY_IMAGE/new_env:$CI_COMMIT_SHA -f newmono.docker .
    - docker push $CI_REGISTRY_IMAGE/new_env:$CI_COMMIT_SHA

newmono_build:
  image: $CI_REGISTRY_IMAGE/new_env:$CI_COMMIT_SHA
  stage: build
  artifacts:
    paths:
      - bin/*.zip
    expire_in: 50days
  script:
    - ./configure.sh
    - make strict
    - make
    - make sanitycheck
    - make install
    # so that we log the version of nuget for when it works
    - make nuget

    - make zip

newmono_test_unit:
  image: $CI_REGISTRY_IMAGE/new_env:$CI_COMMIT_SHA
  stage: unit_tests
  script:

    - time (./configure.sh && make && make check)

newmono_test_integration:
  image: $CI_REGISTRY_IMAGE/new_env:$CI_COMMIT_SHA
  stage: integration_tests
  script:
    - ./configure.sh &&
      make &&
      make update-servers

stockmono_snap_build:
  image: ubuntu:20.04
  stage: package

  variables:
    # Fixes:
    # "Cannot connect to the Docker daemon. Is the docker daemon running on this host?"
    DOCKER_HOST: tcp://docker:2375
  services:
    # To support docker-in-docker
    - docker:dind

  script:
    - ./scripts/snap_build_as_docker.sh

  artifacts:
    paths:
      - "*.snap"
    expire_in: 50days

stockmono_snap_upload:
  image: ubuntu:20.04
  stage: package

  needs:
    - stockmono_snap_build
  script:
    - apt update && apt install --yes git make curl fsharp
    - ./configure.sh # in case we need fsx instead of fsharpi
    - ./scripts/snap_release.sh

